"""added user_name field to user db

Revision ID: 3ab34f5d6153
Revises: eca9ab63684a
Create Date: 2023-07-17 12:29:25.636634

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


# revision identifiers, used by Alembic.
revision = '3ab34f5d6153'
down_revision = 'eca9ab63684a'
branch_labels = None
depends_on = None


def upgrade():
    
    conn = op.get_bind()
    result = conn.execute(text("SELECT 1 FROM pg_constraint WHERE conname = 'unique_composer_nationalities'"))
    if not result.fetchone():
        with op.batch_alter_table('composer_nationalities', schema=None) as batch_op:
            batch_op.create_unique_constraint('unique_composer_nationalities', ['composer_id', 'nation_id'])
    conn = op.get_bind()
    result = conn.execute(text("SELECT 1 FROM pg_constraint WHERE conname = 'unique_performer_nationalities'"))
    if not result.fetchone():
        with op.batch_alter_table('performer_nationalities', schema=None) as batch_op:
            batch_op.create_unique_constraint('unique_performer_nationalities', ['performer_id', 'nation_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_name', sa.String(length=120), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('user_name')

    with op.batch_alter_table('performer_nationalities', schema=None) as batch_op:
        batch_op.drop_constraint('unique_performer_nationalities', type_='unique')

    with op.batch_alter_table('composer_nationalities', schema=None) as batch_op:
        batch_op.drop_constraint('unique_composer_nationalities', type_='unique')

    # ### end Alembic commands ###
